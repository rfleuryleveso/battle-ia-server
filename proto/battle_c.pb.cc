// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: battle_c.proto
// Protobuf C++ Version: 5.29.2

#include "battle_c.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace battle_c {

inline constexpr WorldOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : map_x_{0},
        map_y_{0},
        grid_resolution_{0},
        max_players_{0},
        grid_based_{false},
        auto_shoot_allowed_{false},
        radar_enabled_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WorldOptions::WorldOptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WorldOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WorldOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WorldOptionsDefaultTypeInternal() {}
  union {
    WorldOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WorldOptionsDefaultTypeInternal _WorldOptions_default_instance_;

inline constexpr Vector3::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        z_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Vector3::Vector3(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Vector3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Vector3DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Vector3DefaultTypeInternal() {}
  union {
    Vector3 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Vector3DefaultTypeInternal _Vector3_default_instance_;

inline constexpr Vector2::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Vector2::Vector2(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Vector2DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Vector2DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Vector2DefaultTypeInternal() {}
  union {
    Vector2 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Vector2DefaultTypeInternal _Vector2_default_instance_;

inline constexpr ShootResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        target_id_{::uint64_t{0u}},
        damage_points_{::uint64_t{0u}},
        success_{false},
        target_destroyed_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ShootResult::ShootResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ShootResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShootResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShootResultDefaultTypeInternal() {}
  union {
    ShootResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShootResultDefaultTypeInternal _ShootResult_default_instance_;

inline constexpr Shoot::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        target_id_{::uint64_t{0u}},
        angle_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Shoot::Shoot(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ShootDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShootDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShootDefaultTypeInternal() {}
  union {
    Shoot _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShootDefaultTypeInternal _Shoot_default_instance_;

inline constexpr ClientInit::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : is_spectator_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ClientInit::ClientInit(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ClientInitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClientInitDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClientInitDefaultTypeInternal() {}
  union {
    ClientInit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClientInitDefaultTypeInternal _ClientInit_default_instance_;

inline constexpr RadarReturn::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        position_{nullptr},
        speed_{nullptr},
        id_{0},
        return_type_{static_cast< ::battle_c::RadarReturnType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR RadarReturn::RadarReturn(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RadarReturnDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RadarReturnDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RadarReturnDefaultTypeInternal() {}
  union {
    RadarReturn _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RadarReturnDefaultTypeInternal _RadarReturn_default_instance_;

inline constexpr PlayerData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        position_{nullptr},
        speed_{nullptr},
        id_{0},
        health_{0},
        armor_{0},
        score_{0},
        alive_{false} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerData::PlayerData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlayerDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerDataDefaultTypeInternal() {}
  union {
    PlayerData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerDataDefaultTypeInternal _PlayerData_default_instance_;

inline constexpr ClientServerMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_id_{0},
        body_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ClientServerMessage::ClientServerMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ClientServerMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClientServerMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClientServerMessageDefaultTypeInternal() {}
  union {
    ClientServerMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClientServerMessageDefaultTypeInternal _ClientServerMessage_default_instance_;

inline constexpr RadarResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : radar_return_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RadarResult::RadarResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RadarResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RadarResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RadarResultDefaultTypeInternal() {}
  union {
    RadarResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RadarResultDefaultTypeInternal _RadarResult_default_instance_;

inline constexpr PlayersSighted::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : players_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PlayersSighted::PlayersSighted(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlayersSightedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayersSightedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayersSightedDefaultTypeInternal() {}
  union {
    PlayersSighted _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayersSightedDefaultTypeInternal _PlayersSighted_default_instance_;

inline constexpr ServerClientMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_id_{0},
        body_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ServerClientMessage::ServerClientMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ServerClientMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerClientMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerClientMessageDefaultTypeInternal() {}
  union {
    ServerClientMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerClientMessageDefaultTypeInternal _ServerClientMessage_default_instance_;
}  // namespace battle_c
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_battle_5fc_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_battle_5fc_2eproto = nullptr;
const ::uint32_t
    TableStruct_battle_5fc_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::battle_c::Vector2, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::battle_c::Vector2, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::battle_c::Vector2, _impl_.y_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::battle_c::Vector3, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::battle_c::Vector3, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::battle_c::Vector3, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::battle_c::Vector3, _impl_.z_),
        PROTOBUF_FIELD_OFFSET(::battle_c::PlayerData, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::battle_c::PlayerData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::battle_c::PlayerData, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::battle_c::PlayerData, _impl_.position_),
        PROTOBUF_FIELD_OFFSET(::battle_c::PlayerData, _impl_.speed_),
        PROTOBUF_FIELD_OFFSET(::battle_c::PlayerData, _impl_.health_),
        PROTOBUF_FIELD_OFFSET(::battle_c::PlayerData, _impl_.armor_),
        PROTOBUF_FIELD_OFFSET(::battle_c::PlayerData, _impl_.score_),
        PROTOBUF_FIELD_OFFSET(::battle_c::PlayerData, _impl_.alive_),
        ~0u,
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::battle_c::RadarReturn, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::battle_c::RadarReturn, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::battle_c::RadarReturn, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::battle_c::RadarReturn, _impl_.position_),
        PROTOBUF_FIELD_OFFSET(::battle_c::RadarReturn, _impl_.speed_),
        PROTOBUF_FIELD_OFFSET(::battle_c::RadarReturn, _impl_.return_type_),
        ~0u,
        0,
        1,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::battle_c::Shoot, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::battle_c::Shoot, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::battle_c::Shoot, _impl_.target_id_),
        PROTOBUF_FIELD_OFFSET(::battle_c::Shoot, _impl_.angle_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::battle_c::ClientInit, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::battle_c::ClientInit, _impl_.is_spectator_),
        PROTOBUF_FIELD_OFFSET(::battle_c::ClientServerMessage, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::battle_c::ClientServerMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::battle_c::ClientServerMessage, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::battle_c::ClientServerMessage, _impl_.message_id_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::battle_c::ClientServerMessage, _impl_.body_),
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::battle_c::WorldOptions, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::battle_c::WorldOptions, _impl_.map_x_),
        PROTOBUF_FIELD_OFFSET(::battle_c::WorldOptions, _impl_.map_y_),
        PROTOBUF_FIELD_OFFSET(::battle_c::WorldOptions, _impl_.grid_based_),
        PROTOBUF_FIELD_OFFSET(::battle_c::WorldOptions, _impl_.grid_resolution_),
        PROTOBUF_FIELD_OFFSET(::battle_c::WorldOptions, _impl_.max_players_),
        PROTOBUF_FIELD_OFFSET(::battle_c::WorldOptions, _impl_.auto_shoot_allowed_),
        PROTOBUF_FIELD_OFFSET(::battle_c::WorldOptions, _impl_.radar_enabled_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::battle_c::RadarResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::battle_c::RadarResult, _impl_.radar_return_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::battle_c::PlayersSighted, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::battle_c::PlayersSighted, _impl_.players_),
        PROTOBUF_FIELD_OFFSET(::battle_c::ShootResult, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::battle_c::ShootResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::battle_c::ShootResult, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::battle_c::ShootResult, _impl_.target_id_),
        PROTOBUF_FIELD_OFFSET(::battle_c::ShootResult, _impl_.damage_points_),
        PROTOBUF_FIELD_OFFSET(::battle_c::ShootResult, _impl_.target_destroyed_),
        ~0u,
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::battle_c::ServerClientMessage, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::battle_c::ServerClientMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::battle_c::ServerClientMessage, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::battle_c::ServerClientMessage, _impl_.message_id_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::battle_c::ServerClientMessage, _impl_.body_),
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::battle_c::Vector2)},
        {10, -1, -1, sizeof(::battle_c::Vector3)},
        {21, 36, -1, sizeof(::battle_c::PlayerData)},
        {43, 55, -1, sizeof(::battle_c::RadarReturn)},
        {59, 69, -1, sizeof(::battle_c::Shoot)},
        {71, -1, -1, sizeof(::battle_c::ClientInit)},
        {80, 96, -1, sizeof(::battle_c::ClientServerMessage)},
        {103, -1, -1, sizeof(::battle_c::WorldOptions)},
        {118, -1, -1, sizeof(::battle_c::RadarResult)},
        {127, -1, -1, sizeof(::battle_c::PlayersSighted)},
        {136, 148, -1, sizeof(::battle_c::ShootResult)},
        {152, 168, -1, sizeof(::battle_c::ServerClientMessage)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::battle_c::_Vector2_default_instance_._instance,
    &::battle_c::_Vector3_default_instance_._instance,
    &::battle_c::_PlayerData_default_instance_._instance,
    &::battle_c::_RadarReturn_default_instance_._instance,
    &::battle_c::_Shoot_default_instance_._instance,
    &::battle_c::_ClientInit_default_instance_._instance,
    &::battle_c::_ClientServerMessage_default_instance_._instance,
    &::battle_c::_WorldOptions_default_instance_._instance,
    &::battle_c::_RadarResult_default_instance_._instance,
    &::battle_c::_PlayersSighted_default_instance_._instance,
    &::battle_c::_ShootResult_default_instance_._instance,
    &::battle_c::_ServerClientMessage_default_instance_._instance,
};
const char descriptor_table_protodef_battle_5fc_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\016battle_c.proto\022\010battle_c\"\037\n\007Vector2\022\t\n"
    "\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\"*\n\007Vector3\022\t\n\001x\030\001 \001("
    "\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\"\275\001\n\nPlayerData\022\n"
    "\n\002id\030\001 \001(\005\022(\n\010position\030\002 \001(\0132\021.battle_c."
    "Vector3H\000\210\001\001\022%\n\005speed\030\003 \001(\0132\021.battle_c.V"
    "ector3H\001\210\001\001\022\016\n\006health\030\004 \001(\005\022\r\n\005armor\030\005 \001"
    "(\005\022\r\n\005score\030\006 \001(\005\022\r\n\005alive\030\007 \001(\010B\013\n\t_pos"
    "itionB\010\n\006_speed\"\220\001\n\013RadarReturn\022\n\n\002id\030\001 "
    "\001(\005\022#\n\010position\030\002 \001(\0132\021.battle_c.Vector3"
    "\022 \n\005speed\030\003 \001(\0132\021.battle_c.Vector3\022.\n\013re"
    "turn_type\030\004 \001(\0162\031.battle_c.RadarReturnTy"
    "pe\"K\n\005Shoot\022\026\n\ttarget_id\030\001 \001(\004H\000\210\001\001\022\022\n\005a"
    "ngle\030\002 \001(\002H\001\210\001\001B\014\n\n_target_idB\010\n\006_angle\""
    "\"\n\nClientInit\022\024\n\014is_spectator\030\001 \001(\010\"\231\002\n\023"
    "ClientServerMessage\022\027\n\nmessage_id\030\001 \001(\005H"
    "\001\210\001\001\022&\n\tset_speed\030\002 \001(\0132\021.battle_c.Vecto"
    "r3H\000\022+\n\016limit_distance\030\003 \001(\0132\021.battle_c."
    "Vector3H\000\022\024\n\nradar_ping\030\004 \001(\005H\000\022\030\n\016get_w"
    "orld_info\030\005 \001(\010H\000\022+\n\013client_init\030\006 \001(\0132\024"
    ".battle_c.ClientInitH\000\022 \n\005shoot\030\007 \001(\0132\017."
    "battle_c.ShootH\000B\006\n\004bodyB\r\n\013_message_id\""
    "\241\001\n\014WorldOptions\022\r\n\005map_x\030\001 \001(\005\022\r\n\005map_y"
    "\030\002 \001(\005\022\022\n\ngrid_based\030\003 \001(\010\022\027\n\017grid_resol"
    "ution\030\004 \001(\002\022\023\n\013max_players\030\005 \001(\005\022\032\n\022auto"
    "_shoot_allowed\030\006 \001(\010\022\025\n\rradar_enabled\030\007 "
    "\001(\010\":\n\013RadarResult\022+\n\014radar_return\030\001 \003(\013"
    "2\025.battle_c.RadarReturn\"7\n\016PlayersSighte"
    "d\022%\n\007players\030\002 \003(\0132\024.battle_c.PlayerData"
    "\"\246\001\n\013ShootResult\022\017\n\007success\030\001 \001(\010\022\026\n\ttar"
    "get_id\030\002 \001(\004H\000\210\001\001\022\032\n\rdamage_points\030\003 \001(\004"
    "H\001\210\001\001\022\035\n\020target_destroyed\030\004 \001(\010H\002\210\001\001B\014\n\n"
    "_target_idB\020\n\016_damage_pointsB\023\n\021_target_"
    "destroyed\"\307\002\n\023ServerClientMessage\022\027\n\nmes"
    "sage_id\030\001 \001(\005H\001\210\001\001\022\017\n\005error\030\002 \001(\tH\000\022/\n\rw"
    "orld_options\030\003 \001(\0132\026.battle_c.WorldOptio"
    "nsH\000\022+\n\013player_data\030\004 \001(\0132\024.battle_c.Pla"
    "yerDataH\000\0223\n\017players_sighted\030\005 \001(\0132\030.bat"
    "tle_c.PlayersSightedH\000\022-\n\014radar_result\030\006"
    " \001(\0132\025.battle_c.RadarResultH\000\022-\n\014shoot_r"
    "esult\030\007 \001(\0132\025.battle_c.ShootResultH\000B\006\n\004"
    "bodyB\r\n\013_message_id*2\n\017RadarReturnType\022\n"
    "\n\006PLAYER\020\000\022\010\n\004WALL\020\001\022\t\n\005BOOST\020\002b\006proto3"
};
static ::absl::once_flag descriptor_table_battle_5fc_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_battle_5fc_2eproto = {
    false,
    false,
    1679,
    descriptor_table_protodef_battle_5fc_2eproto,
    "battle_c.proto",
    &descriptor_table_battle_5fc_2eproto_once,
    nullptr,
    0,
    12,
    schemas,
    file_default_instances,
    TableStruct_battle_5fc_2eproto::offsets,
    file_level_enum_descriptors_battle_5fc_2eproto,
    file_level_service_descriptors_battle_5fc_2eproto,
};
namespace battle_c {
const ::google::protobuf::EnumDescriptor* RadarReturnType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_battle_5fc_2eproto);
  return file_level_enum_descriptors_battle_5fc_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t RadarReturnType_internal_data_[] = {
    196608u, 0u, };
bool RadarReturnType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class Vector2::_Internal {
 public:
};

Vector2::Vector2(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:battle_c.Vector2)
}
Vector2::Vector2(
    ::google::protobuf::Arena* arena, const Vector2& from)
    : Vector2(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Vector2::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Vector2::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, y_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::y_));
}
Vector2::~Vector2() {
  // @@protoc_insertion_point(destructor:battle_c.Vector2)
  SharedDtor(*this);
}
inline void Vector2::SharedDtor(MessageLite& self) {
  Vector2& this_ = static_cast<Vector2&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Vector2::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Vector2(arena);
}
constexpr auto Vector2::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Vector2),
                                            alignof(Vector2));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Vector2::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Vector2_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Vector2::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Vector2>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Vector2::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Vector2>(), &Vector2::ByteSizeLong,
            &Vector2::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Vector2, _impl_._cached_size_),
        false,
    },
    &Vector2::kDescriptorMethods,
    &descriptor_table_battle_5fc_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Vector2::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Vector2::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::battle_c::Vector2>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 y = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Vector2, _impl_.y_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Vector2, _impl_.y_)}},
    // int32 x = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Vector2, _impl_.x_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Vector2, _impl_.x_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 x = 1;
    {PROTOBUF_FIELD_OFFSET(Vector2, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 y = 2;
    {PROTOBUF_FIELD_OFFSET(Vector2, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Vector2::Clear() {
// @@protoc_insertion_point(message_clear_start:battle_c.Vector2)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.y_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.y_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Vector2::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Vector2& this_ = static_cast<const Vector2&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Vector2::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Vector2& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:battle_c.Vector2)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 x = 1;
          if (this_._internal_x() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_x(), target);
          }

          // int32 y = 2;
          if (this_._internal_y() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_y(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:battle_c.Vector2)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Vector2::ByteSizeLong(const MessageLite& base) {
          const Vector2& this_ = static_cast<const Vector2&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Vector2::ByteSizeLong() const {
          const Vector2& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:battle_c.Vector2)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int32 x = 1;
            if (this_._internal_x() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_x());
            }
            // int32 y = 2;
            if (this_._internal_y() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_y());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Vector2::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Vector2*>(&to_msg);
  auto& from = static_cast<const Vector2&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:battle_c.Vector2)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_x() != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  if (from._internal_y() != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Vector2::CopyFrom(const Vector2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:battle_c.Vector2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Vector2::InternalSwap(Vector2* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vector2, _impl_.y_)
      + sizeof(Vector2::_impl_.y_)
      - PROTOBUF_FIELD_OFFSET(Vector2, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Vector2::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Vector3::_Internal {
 public:
};

Vector3::Vector3(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:battle_c.Vector3)
}
Vector3::Vector3(
    ::google::protobuf::Arena* arena, const Vector3& from)
    : Vector3(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Vector3::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Vector3::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::z_));
}
Vector3::~Vector3() {
  // @@protoc_insertion_point(destructor:battle_c.Vector3)
  SharedDtor(*this);
}
inline void Vector3::SharedDtor(MessageLite& self) {
  Vector3& this_ = static_cast<Vector3&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Vector3::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Vector3(arena);
}
constexpr auto Vector3::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Vector3),
                                            alignof(Vector3));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Vector3::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Vector3_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Vector3::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Vector3>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Vector3::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Vector3>(), &Vector3::ByteSizeLong,
            &Vector3::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Vector3, _impl_._cached_size_),
        false,
    },
    &Vector3::kDescriptorMethods,
    &descriptor_table_battle_5fc_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Vector3::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Vector3::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::battle_c::Vector3>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float x = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(Vector3, _impl_.x_)}},
    // float y = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(Vector3, _impl_.y_)}},
    // float z = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(Vector3, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float x = 1;
    {PROTOBUF_FIELD_OFFSET(Vector3, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float y = 2;
    {PROTOBUF_FIELD_OFFSET(Vector3, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float z = 3;
    {PROTOBUF_FIELD_OFFSET(Vector3, _impl_.z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Vector3::Clear() {
// @@protoc_insertion_point(message_clear_start:battle_c.Vector3)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.z_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.z_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Vector3::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Vector3& this_ = static_cast<const Vector3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Vector3::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Vector3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:battle_c.Vector3)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // float x = 1;
          if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_x(), target);
          }

          // float y = 2;
          if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_y(), target);
          }

          // float z = 3;
          if (::absl::bit_cast<::uint32_t>(this_._internal_z()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_z(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:battle_c.Vector3)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Vector3::ByteSizeLong(const MessageLite& base) {
          const Vector3& this_ = static_cast<const Vector3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Vector3::ByteSizeLong() const {
          const Vector3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:battle_c.Vector3)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // float x = 1;
            if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
              total_size += 5;
            }
            // float y = 2;
            if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
              total_size += 5;
            }
            // float z = 3;
            if (::absl::bit_cast<::uint32_t>(this_._internal_z()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Vector3::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Vector3*>(&to_msg);
  auto& from = static_cast<const Vector3&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:battle_c.Vector3)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint32_t>(from._internal_x()) != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_y()) != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_z()) != 0) {
    _this->_impl_.z_ = from._impl_.z_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Vector3::CopyFrom(const Vector3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:battle_c.Vector3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Vector3::InternalSwap(Vector3* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vector3, _impl_.z_)
      + sizeof(Vector3::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(Vector3, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Vector3::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PlayerData::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PlayerData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PlayerData, _impl_._has_bits_);
};

PlayerData::PlayerData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:battle_c.PlayerData)
}
inline PROTOBUF_NDEBUG_INLINE PlayerData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::battle_c::PlayerData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PlayerData::PlayerData(
    ::google::protobuf::Arena* arena,
    const PlayerData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PlayerData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::battle_c::Vector3>(
                              arena, *from._impl_.position_)
                        : nullptr;
  _impl_.speed_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::battle_c::Vector3>(
                              arena, *from._impl_.speed_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, alive_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::alive_));

  // @@protoc_insertion_point(copy_constructor:battle_c.PlayerData)
}
inline PROTOBUF_NDEBUG_INLINE PlayerData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PlayerData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_),
           0,
           offsetof(Impl_, alive_) -
               offsetof(Impl_, position_) +
               sizeof(Impl_::alive_));
}
PlayerData::~PlayerData() {
  // @@protoc_insertion_point(destructor:battle_c.PlayerData)
  SharedDtor(*this);
}
inline void PlayerData::SharedDtor(MessageLite& self) {
  PlayerData& this_ = static_cast<PlayerData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.position_;
  delete this_._impl_.speed_;
  this_._impl_.~Impl_();
}

inline void* PlayerData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PlayerData(arena);
}
constexpr auto PlayerData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PlayerData),
                                            alignof(PlayerData));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PlayerData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PlayerData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PlayerData::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PlayerData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PlayerData::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PlayerData>(), &PlayerData::ByteSizeLong,
            &PlayerData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PlayerData, _impl_._cached_size_),
        false,
    },
    &PlayerData::kDescriptorMethods,
    &descriptor_table_battle_5fc_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PlayerData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 2, 0, 2> PlayerData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PlayerData, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::battle_c::PlayerData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerData, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerData, _impl_.id_)}},
    // optional .battle_c.Vector3 position = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(PlayerData, _impl_.position_)}},
    // optional .battle_c.Vector3 speed = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(PlayerData, _impl_.speed_)}},
    // int32 health = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerData, _impl_.health_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerData, _impl_.health_)}},
    // int32 armor = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerData, _impl_.armor_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerData, _impl_.armor_)}},
    // int32 score = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerData, _impl_.score_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerData, _impl_.score_)}},
    // bool alive = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PlayerData, _impl_.alive_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerData, _impl_.alive_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerData, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // optional .battle_c.Vector3 position = 2;
    {PROTOBUF_FIELD_OFFSET(PlayerData, _impl_.position_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .battle_c.Vector3 speed = 3;
    {PROTOBUF_FIELD_OFFSET(PlayerData, _impl_.speed_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 health = 4;
    {PROTOBUF_FIELD_OFFSET(PlayerData, _impl_.health_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 armor = 5;
    {PROTOBUF_FIELD_OFFSET(PlayerData, _impl_.armor_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 score = 6;
    {PROTOBUF_FIELD_OFFSET(PlayerData, _impl_.score_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool alive = 7;
    {PROTOBUF_FIELD_OFFSET(PlayerData, _impl_.alive_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::battle_c::Vector3>()},
    {::_pbi::TcParser::GetTable<::battle_c::Vector3>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PlayerData::Clear() {
// @@protoc_insertion_point(message_clear_start:battle_c.PlayerData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.speed_ != nullptr);
      _impl_.speed_->Clear();
    }
  }
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.alive_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.alive_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PlayerData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PlayerData& this_ = static_cast<const PlayerData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PlayerData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PlayerData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:battle_c.PlayerData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 id = 1;
          if (this_._internal_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_id(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .battle_c.Vector3 position = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.position_, this_._impl_.position_->GetCachedSize(), target,
                stream);
          }

          // optional .battle_c.Vector3 speed = 3;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.speed_, this_._impl_.speed_->GetCachedSize(), target,
                stream);
          }

          // int32 health = 4;
          if (this_._internal_health() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_health(), target);
          }

          // int32 armor = 5;
          if (this_._internal_armor() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_armor(), target);
          }

          // int32 score = 6;
          if (this_._internal_score() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<6>(
                    stream, this_._internal_score(), target);
          }

          // bool alive = 7;
          if (this_._internal_alive() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                7, this_._internal_alive(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:battle_c.PlayerData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PlayerData::ByteSizeLong(const MessageLite& base) {
          const PlayerData& this_ = static_cast<const PlayerData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PlayerData::ByteSizeLong() const {
          const PlayerData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:battle_c.PlayerData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // optional .battle_c.Vector3 position = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.position_);
            }
            // optional .battle_c.Vector3 speed = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.speed_);
            }
          }
           {
            // int32 id = 1;
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_id());
            }
            // int32 health = 4;
            if (this_._internal_health() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_health());
            }
            // int32 armor = 5;
            if (this_._internal_armor() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_armor());
            }
            // int32 score = 6;
            if (this_._internal_score() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_score());
            }
            // bool alive = 7;
            if (this_._internal_alive() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PlayerData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlayerData*>(&to_msg);
  auto& from = static_cast<const PlayerData&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:battle_c.PlayerData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.position_ != nullptr);
      if (_this->_impl_.position_ == nullptr) {
        _this->_impl_.position_ =
            ::google::protobuf::Message::CopyConstruct<::battle_c::Vector3>(arena, *from._impl_.position_);
      } else {
        _this->_impl_.position_->MergeFrom(*from._impl_.position_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.speed_ != nullptr);
      if (_this->_impl_.speed_ == nullptr) {
        _this->_impl_.speed_ =
            ::google::protobuf::Message::CopyConstruct<::battle_c::Vector3>(arena, *from._impl_.speed_);
      } else {
        _this->_impl_.speed_->MergeFrom(*from._impl_.speed_);
      }
    }
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_health() != 0) {
    _this->_impl_.health_ = from._impl_.health_;
  }
  if (from._internal_armor() != 0) {
    _this->_impl_.armor_ = from._impl_.armor_;
  }
  if (from._internal_score() != 0) {
    _this->_impl_.score_ = from._impl_.score_;
  }
  if (from._internal_alive() != 0) {
    _this->_impl_.alive_ = from._impl_.alive_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerData::CopyFrom(const PlayerData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:battle_c.PlayerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlayerData::InternalSwap(PlayerData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerData, _impl_.alive_)
      + sizeof(PlayerData::_impl_.alive_)
      - PROTOBUF_FIELD_OFFSET(PlayerData, _impl_.position_)>(
          reinterpret_cast<char*>(&_impl_.position_),
          reinterpret_cast<char*>(&other->_impl_.position_));
}

::google::protobuf::Metadata PlayerData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RadarReturn::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RadarReturn>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RadarReturn, _impl_._has_bits_);
};

RadarReturn::RadarReturn(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:battle_c.RadarReturn)
}
inline PROTOBUF_NDEBUG_INLINE RadarReturn::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::battle_c::RadarReturn& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RadarReturn::RadarReturn(
    ::google::protobuf::Arena* arena,
    const RadarReturn& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RadarReturn* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::battle_c::Vector3>(
                              arena, *from._impl_.position_)
                        : nullptr;
  _impl_.speed_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::battle_c::Vector3>(
                              arena, *from._impl_.speed_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, return_type_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::return_type_));

  // @@protoc_insertion_point(copy_constructor:battle_c.RadarReturn)
}
inline PROTOBUF_NDEBUG_INLINE RadarReturn::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RadarReturn::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_),
           0,
           offsetof(Impl_, return_type_) -
               offsetof(Impl_, position_) +
               sizeof(Impl_::return_type_));
}
RadarReturn::~RadarReturn() {
  // @@protoc_insertion_point(destructor:battle_c.RadarReturn)
  SharedDtor(*this);
}
inline void RadarReturn::SharedDtor(MessageLite& self) {
  RadarReturn& this_ = static_cast<RadarReturn&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.position_;
  delete this_._impl_.speed_;
  this_._impl_.~Impl_();
}

inline void* RadarReturn::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RadarReturn(arena);
}
constexpr auto RadarReturn::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RadarReturn),
                                            alignof(RadarReturn));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RadarReturn::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RadarReturn_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RadarReturn::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RadarReturn>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RadarReturn::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RadarReturn>(), &RadarReturn::ByteSizeLong,
            &RadarReturn::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RadarReturn, _impl_._cached_size_),
        false,
    },
    &RadarReturn::kDescriptorMethods,
    &descriptor_table_battle_5fc_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RadarReturn::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 0, 2> RadarReturn::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RadarReturn, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::battle_c::RadarReturn>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .battle_c.RadarReturnType return_type = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RadarReturn, _impl_.return_type_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(RadarReturn, _impl_.return_type_)}},
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RadarReturn, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RadarReturn, _impl_.id_)}},
    // .battle_c.Vector3 position = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(RadarReturn, _impl_.position_)}},
    // .battle_c.Vector3 speed = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(RadarReturn, _impl_.speed_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(RadarReturn, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .battle_c.Vector3 position = 2;
    {PROTOBUF_FIELD_OFFSET(RadarReturn, _impl_.position_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .battle_c.Vector3 speed = 3;
    {PROTOBUF_FIELD_OFFSET(RadarReturn, _impl_.speed_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .battle_c.RadarReturnType return_type = 4;
    {PROTOBUF_FIELD_OFFSET(RadarReturn, _impl_.return_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::battle_c::Vector3>()},
    {::_pbi::TcParser::GetTable<::battle_c::Vector3>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RadarReturn::Clear() {
// @@protoc_insertion_point(message_clear_start:battle_c.RadarReturn)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.speed_ != nullptr);
      _impl_.speed_->Clear();
    }
  }
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.return_type_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.return_type_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RadarReturn::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RadarReturn& this_ = static_cast<const RadarReturn&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RadarReturn::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RadarReturn& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:battle_c.RadarReturn)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 id = 1;
          if (this_._internal_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_id(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .battle_c.Vector3 position = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.position_, this_._impl_.position_->GetCachedSize(), target,
                stream);
          }

          // .battle_c.Vector3 speed = 3;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.speed_, this_._impl_.speed_->GetCachedSize(), target,
                stream);
          }

          // .battle_c.RadarReturnType return_type = 4;
          if (this_._internal_return_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_return_type(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:battle_c.RadarReturn)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RadarReturn::ByteSizeLong(const MessageLite& base) {
          const RadarReturn& this_ = static_cast<const RadarReturn&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RadarReturn::ByteSizeLong() const {
          const RadarReturn& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:battle_c.RadarReturn)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .battle_c.Vector3 position = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.position_);
            }
            // .battle_c.Vector3 speed = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.speed_);
            }
          }
           {
            // int32 id = 1;
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_id());
            }
            // .battle_c.RadarReturnType return_type = 4;
            if (this_._internal_return_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_return_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RadarReturn::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RadarReturn*>(&to_msg);
  auto& from = static_cast<const RadarReturn&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:battle_c.RadarReturn)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.position_ != nullptr);
      if (_this->_impl_.position_ == nullptr) {
        _this->_impl_.position_ =
            ::google::protobuf::Message::CopyConstruct<::battle_c::Vector3>(arena, *from._impl_.position_);
      } else {
        _this->_impl_.position_->MergeFrom(*from._impl_.position_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.speed_ != nullptr);
      if (_this->_impl_.speed_ == nullptr) {
        _this->_impl_.speed_ =
            ::google::protobuf::Message::CopyConstruct<::battle_c::Vector3>(arena, *from._impl_.speed_);
      } else {
        _this->_impl_.speed_->MergeFrom(*from._impl_.speed_);
      }
    }
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_return_type() != 0) {
    _this->_impl_.return_type_ = from._impl_.return_type_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RadarReturn::CopyFrom(const RadarReturn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:battle_c.RadarReturn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RadarReturn::InternalSwap(RadarReturn* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RadarReturn, _impl_.return_type_)
      + sizeof(RadarReturn::_impl_.return_type_)
      - PROTOBUF_FIELD_OFFSET(RadarReturn, _impl_.position_)>(
          reinterpret_cast<char*>(&_impl_.position_),
          reinterpret_cast<char*>(&other->_impl_.position_));
}

::google::protobuf::Metadata RadarReturn::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Shoot::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Shoot>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Shoot, _impl_._has_bits_);
};

Shoot::Shoot(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:battle_c.Shoot)
}
Shoot::Shoot(
    ::google::protobuf::Arena* arena, const Shoot& from)
    : Shoot(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Shoot::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Shoot::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, target_id_),
           0,
           offsetof(Impl_, angle_) -
               offsetof(Impl_, target_id_) +
               sizeof(Impl_::angle_));
}
Shoot::~Shoot() {
  // @@protoc_insertion_point(destructor:battle_c.Shoot)
  SharedDtor(*this);
}
inline void Shoot::SharedDtor(MessageLite& self) {
  Shoot& this_ = static_cast<Shoot&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Shoot::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Shoot(arena);
}
constexpr auto Shoot::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Shoot),
                                            alignof(Shoot));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Shoot::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Shoot_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Shoot::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Shoot>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Shoot::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Shoot>(), &Shoot::ByteSizeLong,
            &Shoot::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Shoot, _impl_._cached_size_),
        false,
    },
    &Shoot::kDescriptorMethods,
    &descriptor_table_battle_5fc_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Shoot::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Shoot::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Shoot, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::battle_c::Shoot>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional float angle = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(Shoot, _impl_.angle_)}},
    // optional uint64 target_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Shoot, _impl_.target_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Shoot, _impl_.target_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 target_id = 1;
    {PROTOBUF_FIELD_OFFSET(Shoot, _impl_.target_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional float angle = 2;
    {PROTOBUF_FIELD_OFFSET(Shoot, _impl_.angle_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Shoot::Clear() {
// @@protoc_insertion_point(message_clear_start:battle_c.Shoot)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.target_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.angle_) -
        reinterpret_cast<char*>(&_impl_.target_id_)) + sizeof(_impl_.angle_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Shoot::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Shoot& this_ = static_cast<const Shoot&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Shoot::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Shoot& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:battle_c.Shoot)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional uint64 target_id = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_target_id(), target);
          }

          // optional float angle = 2;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_angle(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:battle_c.Shoot)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Shoot::ByteSizeLong(const MessageLite& base) {
          const Shoot& this_ = static_cast<const Shoot&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Shoot::ByteSizeLong() const {
          const Shoot& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:battle_c.Shoot)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // optional uint64 target_id = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_target_id());
            }
            // optional float angle = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Shoot::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Shoot*>(&to_msg);
  auto& from = static_cast<const Shoot&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:battle_c.Shoot)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.target_id_ = from._impl_.target_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.angle_ = from._impl_.angle_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Shoot::CopyFrom(const Shoot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:battle_c.Shoot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Shoot::InternalSwap(Shoot* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Shoot, _impl_.angle_)
      + sizeof(Shoot::_impl_.angle_)
      - PROTOBUF_FIELD_OFFSET(Shoot, _impl_.target_id_)>(
          reinterpret_cast<char*>(&_impl_.target_id_),
          reinterpret_cast<char*>(&other->_impl_.target_id_));
}

::google::protobuf::Metadata Shoot::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ClientInit::_Internal {
 public:
};

ClientInit::ClientInit(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:battle_c.ClientInit)
}
ClientInit::ClientInit(
    ::google::protobuf::Arena* arena, const ClientInit& from)
    : ClientInit(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ClientInit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ClientInit::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.is_spectator_ = {};
}
ClientInit::~ClientInit() {
  // @@protoc_insertion_point(destructor:battle_c.ClientInit)
  SharedDtor(*this);
}
inline void ClientInit::SharedDtor(MessageLite& self) {
  ClientInit& this_ = static_cast<ClientInit&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ClientInit::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ClientInit(arena);
}
constexpr auto ClientInit::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ClientInit),
                                            alignof(ClientInit));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ClientInit::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ClientInit_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ClientInit::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ClientInit>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ClientInit::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ClientInit>(), &ClientInit::ByteSizeLong,
            &ClientInit::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ClientInit, _impl_._cached_size_),
        false,
    },
    &ClientInit::kDescriptorMethods,
    &descriptor_table_battle_5fc_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ClientInit::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ClientInit::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::battle_c::ClientInit>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool is_spectator = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ClientInit, _impl_.is_spectator_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ClientInit, _impl_.is_spectator_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool is_spectator = 1;
    {PROTOBUF_FIELD_OFFSET(ClientInit, _impl_.is_spectator_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ClientInit::Clear() {
// @@protoc_insertion_point(message_clear_start:battle_c.ClientInit)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.is_spectator_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ClientInit::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ClientInit& this_ = static_cast<const ClientInit&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ClientInit::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ClientInit& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:battle_c.ClientInit)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool is_spectator = 1;
          if (this_._internal_is_spectator() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_is_spectator(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:battle_c.ClientInit)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ClientInit::ByteSizeLong(const MessageLite& base) {
          const ClientInit& this_ = static_cast<const ClientInit&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ClientInit::ByteSizeLong() const {
          const ClientInit& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:battle_c.ClientInit)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bool is_spectator = 1;
            if (this_._internal_is_spectator() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ClientInit::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ClientInit*>(&to_msg);
  auto& from = static_cast<const ClientInit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:battle_c.ClientInit)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_is_spectator() != 0) {
    _this->_impl_.is_spectator_ = from._impl_.is_spectator_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClientInit::CopyFrom(const ClientInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:battle_c.ClientInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ClientInit::InternalSwap(ClientInit* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.is_spectator_, other->_impl_.is_spectator_);
}

::google::protobuf::Metadata ClientInit::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ClientServerMessage::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ClientServerMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ClientServerMessage, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::battle_c::ClientServerMessage, _impl_._oneof_case_);
};

void ClientServerMessage::set_allocated_set_speed(::battle_c::Vector3* set_speed) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_body();
  if (set_speed) {
    ::google::protobuf::Arena* submessage_arena = set_speed->GetArena();
    if (message_arena != submessage_arena) {
      set_speed = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_speed, submessage_arena);
    }
    set_has_set_speed();
    _impl_.body_.set_speed_ = set_speed;
  }
  // @@protoc_insertion_point(field_set_allocated:battle_c.ClientServerMessage.set_speed)
}
void ClientServerMessage::set_allocated_limit_distance(::battle_c::Vector3* limit_distance) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_body();
  if (limit_distance) {
    ::google::protobuf::Arena* submessage_arena = limit_distance->GetArena();
    if (message_arena != submessage_arena) {
      limit_distance = ::google::protobuf::internal::GetOwnedMessage(message_arena, limit_distance, submessage_arena);
    }
    set_has_limit_distance();
    _impl_.body_.limit_distance_ = limit_distance;
  }
  // @@protoc_insertion_point(field_set_allocated:battle_c.ClientServerMessage.limit_distance)
}
void ClientServerMessage::set_allocated_client_init(::battle_c::ClientInit* client_init) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_body();
  if (client_init) {
    ::google::protobuf::Arena* submessage_arena = client_init->GetArena();
    if (message_arena != submessage_arena) {
      client_init = ::google::protobuf::internal::GetOwnedMessage(message_arena, client_init, submessage_arena);
    }
    set_has_client_init();
    _impl_.body_.client_init_ = client_init;
  }
  // @@protoc_insertion_point(field_set_allocated:battle_c.ClientServerMessage.client_init)
}
void ClientServerMessage::set_allocated_shoot(::battle_c::Shoot* shoot) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_body();
  if (shoot) {
    ::google::protobuf::Arena* submessage_arena = shoot->GetArena();
    if (message_arena != submessage_arena) {
      shoot = ::google::protobuf::internal::GetOwnedMessage(message_arena, shoot, submessage_arena);
    }
    set_has_shoot();
    _impl_.body_.shoot_ = shoot;
  }
  // @@protoc_insertion_point(field_set_allocated:battle_c.ClientServerMessage.shoot)
}
ClientServerMessage::ClientServerMessage(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:battle_c.ClientServerMessage)
}
inline PROTOBUF_NDEBUG_INLINE ClientServerMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::battle_c::ClientServerMessage& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        body_{},
        _oneof_case_{from._oneof_case_[0]} {}

ClientServerMessage::ClientServerMessage(
    ::google::protobuf::Arena* arena,
    const ClientServerMessage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ClientServerMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.message_id_ = from._impl_.message_id_;
  switch (body_case()) {
    case BODY_NOT_SET:
      break;
      case kSetSpeed:
        _impl_.body_.set_speed_ = ::google::protobuf::Message::CopyConstruct<::battle_c::Vector3>(arena, *from._impl_.body_.set_speed_);
        break;
      case kLimitDistance:
        _impl_.body_.limit_distance_ = ::google::protobuf::Message::CopyConstruct<::battle_c::Vector3>(arena, *from._impl_.body_.limit_distance_);
        break;
      case kRadarPing:
        _impl_.body_.radar_ping_ = from._impl_.body_.radar_ping_;
        break;
      case kGetWorldInfo:
        _impl_.body_.get_world_info_ = from._impl_.body_.get_world_info_;
        break;
      case kClientInit:
        _impl_.body_.client_init_ = ::google::protobuf::Message::CopyConstruct<::battle_c::ClientInit>(arena, *from._impl_.body_.client_init_);
        break;
      case kShoot:
        _impl_.body_.shoot_ = ::google::protobuf::Message::CopyConstruct<::battle_c::Shoot>(arena, *from._impl_.body_.shoot_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:battle_c.ClientServerMessage)
}
inline PROTOBUF_NDEBUG_INLINE ClientServerMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        body_{},
        _oneof_case_{} {}

inline void ClientServerMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.message_id_ = {};
}
ClientServerMessage::~ClientServerMessage() {
  // @@protoc_insertion_point(destructor:battle_c.ClientServerMessage)
  SharedDtor(*this);
}
inline void ClientServerMessage::SharedDtor(MessageLite& self) {
  ClientServerMessage& this_ = static_cast<ClientServerMessage&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_body()) {
    this_.clear_body();
  }
  this_._impl_.~Impl_();
}

void ClientServerMessage::clear_body() {
// @@protoc_insertion_point(one_of_clear_start:battle_c.ClientServerMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (body_case()) {
    case kSetSpeed: {
      if (GetArena() == nullptr) {
        delete _impl_.body_.set_speed_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.body_.set_speed_);
      }
      break;
    }
    case kLimitDistance: {
      if (GetArena() == nullptr) {
        delete _impl_.body_.limit_distance_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.body_.limit_distance_);
      }
      break;
    }
    case kRadarPing: {
      // No need to clear
      break;
    }
    case kGetWorldInfo: {
      // No need to clear
      break;
    }
    case kClientInit: {
      if (GetArena() == nullptr) {
        delete _impl_.body_.client_init_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.body_.client_init_);
      }
      break;
    }
    case kShoot: {
      if (GetArena() == nullptr) {
        delete _impl_.body_.shoot_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.body_.shoot_);
      }
      break;
    }
    case BODY_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = BODY_NOT_SET;
}


inline void* ClientServerMessage::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ClientServerMessage(arena);
}
constexpr auto ClientServerMessage::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ClientServerMessage),
                                            alignof(ClientServerMessage));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ClientServerMessage::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ClientServerMessage_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ClientServerMessage::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ClientServerMessage>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ClientServerMessage::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ClientServerMessage>(), &ClientServerMessage::ByteSizeLong,
            &ClientServerMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ClientServerMessage, _impl_._cached_size_),
        false,
    },
    &ClientServerMessage::kDescriptorMethods,
    &descriptor_table_battle_5fc_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ClientServerMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 7, 4, 0, 2> ClientServerMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ClientServerMessage, _impl_._has_bits_),
    0, // no _extensions_
    7, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::battle_c::ClientServerMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 message_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ClientServerMessage, _impl_.message_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ClientServerMessage, _impl_.message_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 message_id = 1;
    {PROTOBUF_FIELD_OFFSET(ClientServerMessage, _impl_.message_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .battle_c.Vector3 set_speed = 2;
    {PROTOBUF_FIELD_OFFSET(ClientServerMessage, _impl_.body_.set_speed_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .battle_c.Vector3 limit_distance = 3;
    {PROTOBUF_FIELD_OFFSET(ClientServerMessage, _impl_.body_.limit_distance_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 radar_ping = 4;
    {PROTOBUF_FIELD_OFFSET(ClientServerMessage, _impl_.body_.radar_ping_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kInt32)},
    // bool get_world_info = 5;
    {PROTOBUF_FIELD_OFFSET(ClientServerMessage, _impl_.body_.get_world_info_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBool)},
    // .battle_c.ClientInit client_init = 6;
    {PROTOBUF_FIELD_OFFSET(ClientServerMessage, _impl_.body_.client_init_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .battle_c.Shoot shoot = 7;
    {PROTOBUF_FIELD_OFFSET(ClientServerMessage, _impl_.body_.shoot_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::battle_c::Vector3>()},
    {::_pbi::TcParser::GetTable<::battle_c::Vector3>()},
    {::_pbi::TcParser::GetTable<::battle_c::ClientInit>()},
    {::_pbi::TcParser::GetTable<::battle_c::Shoot>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ClientServerMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:battle_c.ClientServerMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_id_ = 0;
  clear_body();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ClientServerMessage::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ClientServerMessage& this_ = static_cast<const ClientServerMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ClientServerMessage::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ClientServerMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:battle_c.ClientServerMessage)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional int32 message_id = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_message_id(), target);
          }

          switch (this_.body_case()) {
            case kSetSpeed: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.body_.set_speed_, this_._impl_.body_.set_speed_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kLimitDistance: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  3, *this_._impl_.body_.limit_distance_, this_._impl_.body_.limit_distance_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kRadarPing: {
              target = ::google::protobuf::internal::WireFormatLite::
                  WriteInt32ToArrayWithField<4>(
                      stream, this_._internal_radar_ping(), target);
              break;
            }
            case kGetWorldInfo: {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteBoolToArray(
                  5, this_._internal_get_world_info(), target);
              break;
            }
            case kClientInit: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  6, *this_._impl_.body_.client_init_, this_._impl_.body_.client_init_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kShoot: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  7, *this_._impl_.body_.shoot_, this_._impl_.body_.shoot_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:battle_c.ClientServerMessage)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ClientServerMessage::ByteSizeLong(const MessageLite& base) {
          const ClientServerMessage& this_ = static_cast<const ClientServerMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ClientServerMessage::ByteSizeLong() const {
          const ClientServerMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:battle_c.ClientServerMessage)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // optional int32 message_id = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_message_id());
            }
          }
          switch (this_.body_case()) {
            // .battle_c.Vector3 set_speed = 2;
            case kSetSpeed: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.body_.set_speed_);
              break;
            }
            // .battle_c.Vector3 limit_distance = 3;
            case kLimitDistance: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.body_.limit_distance_);
              break;
            }
            // int32 radar_ping = 4;
            case kRadarPing: {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_radar_ping());
              break;
            }
            // bool get_world_info = 5;
            case kGetWorldInfo: {
              total_size += 2;
              break;
            }
            // .battle_c.ClientInit client_init = 6;
            case kClientInit: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.body_.client_init_);
              break;
            }
            // .battle_c.Shoot shoot = 7;
            case kShoot: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.body_.shoot_);
              break;
            }
            case BODY_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ClientServerMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ClientServerMessage*>(&to_msg);
  auto& from = static_cast<const ClientServerMessage&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:battle_c.ClientServerMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.message_id_ = from._impl_.message_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_body();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kSetSpeed: {
        if (oneof_needs_init) {
          _this->_impl_.body_.set_speed_ =
              ::google::protobuf::Message::CopyConstruct<::battle_c::Vector3>(arena, *from._impl_.body_.set_speed_);
        } else {
          _this->_impl_.body_.set_speed_->MergeFrom(from._internal_set_speed());
        }
        break;
      }
      case kLimitDistance: {
        if (oneof_needs_init) {
          _this->_impl_.body_.limit_distance_ =
              ::google::protobuf::Message::CopyConstruct<::battle_c::Vector3>(arena, *from._impl_.body_.limit_distance_);
        } else {
          _this->_impl_.body_.limit_distance_->MergeFrom(from._internal_limit_distance());
        }
        break;
      }
      case kRadarPing: {
        _this->_impl_.body_.radar_ping_ = from._impl_.body_.radar_ping_;
        break;
      }
      case kGetWorldInfo: {
        _this->_impl_.body_.get_world_info_ = from._impl_.body_.get_world_info_;
        break;
      }
      case kClientInit: {
        if (oneof_needs_init) {
          _this->_impl_.body_.client_init_ =
              ::google::protobuf::Message::CopyConstruct<::battle_c::ClientInit>(arena, *from._impl_.body_.client_init_);
        } else {
          _this->_impl_.body_.client_init_->MergeFrom(from._internal_client_init());
        }
        break;
      }
      case kShoot: {
        if (oneof_needs_init) {
          _this->_impl_.body_.shoot_ =
              ::google::protobuf::Message::CopyConstruct<::battle_c::Shoot>(arena, *from._impl_.body_.shoot_);
        } else {
          _this->_impl_.body_.shoot_->MergeFrom(from._internal_shoot());
        }
        break;
      }
      case BODY_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClientServerMessage::CopyFrom(const ClientServerMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:battle_c.ClientServerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ClientServerMessage::InternalSwap(ClientServerMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.message_id_, other->_impl_.message_id_);
  swap(_impl_.body_, other->_impl_.body_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ClientServerMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WorldOptions::_Internal {
 public:
};

WorldOptions::WorldOptions(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:battle_c.WorldOptions)
}
WorldOptions::WorldOptions(
    ::google::protobuf::Arena* arena, const WorldOptions& from)
    : WorldOptions(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE WorldOptions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void WorldOptions::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, map_x_),
           0,
           offsetof(Impl_, radar_enabled_) -
               offsetof(Impl_, map_x_) +
               sizeof(Impl_::radar_enabled_));
}
WorldOptions::~WorldOptions() {
  // @@protoc_insertion_point(destructor:battle_c.WorldOptions)
  SharedDtor(*this);
}
inline void WorldOptions::SharedDtor(MessageLite& self) {
  WorldOptions& this_ = static_cast<WorldOptions&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* WorldOptions::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) WorldOptions(arena);
}
constexpr auto WorldOptions::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(WorldOptions),
                                            alignof(WorldOptions));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull WorldOptions::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_WorldOptions_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &WorldOptions::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<WorldOptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &WorldOptions::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<WorldOptions>(), &WorldOptions::ByteSizeLong,
            &WorldOptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(WorldOptions, _impl_._cached_size_),
        false,
    },
    &WorldOptions::kDescriptorMethods,
    &descriptor_table_battle_5fc_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* WorldOptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 0, 2> WorldOptions::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::battle_c::WorldOptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 map_x = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WorldOptions, _impl_.map_x_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(WorldOptions, _impl_.map_x_)}},
    // int32 map_y = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WorldOptions, _impl_.map_y_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(WorldOptions, _impl_.map_y_)}},
    // bool grid_based = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(WorldOptions, _impl_.grid_based_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(WorldOptions, _impl_.grid_based_)}},
    // float grid_resolution = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(WorldOptions, _impl_.grid_resolution_)}},
    // int32 max_players = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WorldOptions, _impl_.max_players_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(WorldOptions, _impl_.max_players_)}},
    // bool auto_shoot_allowed = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(WorldOptions, _impl_.auto_shoot_allowed_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(WorldOptions, _impl_.auto_shoot_allowed_)}},
    // bool radar_enabled = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(WorldOptions, _impl_.radar_enabled_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(WorldOptions, _impl_.radar_enabled_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 map_x = 1;
    {PROTOBUF_FIELD_OFFSET(WorldOptions, _impl_.map_x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 map_y = 2;
    {PROTOBUF_FIELD_OFFSET(WorldOptions, _impl_.map_y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool grid_based = 3;
    {PROTOBUF_FIELD_OFFSET(WorldOptions, _impl_.grid_based_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // float grid_resolution = 4;
    {PROTOBUF_FIELD_OFFSET(WorldOptions, _impl_.grid_resolution_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // int32 max_players = 5;
    {PROTOBUF_FIELD_OFFSET(WorldOptions, _impl_.max_players_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool auto_shoot_allowed = 6;
    {PROTOBUF_FIELD_OFFSET(WorldOptions, _impl_.auto_shoot_allowed_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool radar_enabled = 7;
    {PROTOBUF_FIELD_OFFSET(WorldOptions, _impl_.radar_enabled_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void WorldOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:battle_c.WorldOptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.map_x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.radar_enabled_) -
      reinterpret_cast<char*>(&_impl_.map_x_)) + sizeof(_impl_.radar_enabled_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* WorldOptions::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const WorldOptions& this_ = static_cast<const WorldOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* WorldOptions::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const WorldOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:battle_c.WorldOptions)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 map_x = 1;
          if (this_._internal_map_x() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_map_x(), target);
          }

          // int32 map_y = 2;
          if (this_._internal_map_y() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_map_y(), target);
          }

          // bool grid_based = 3;
          if (this_._internal_grid_based() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_grid_based(), target);
          }

          // float grid_resolution = 4;
          if (::absl::bit_cast<::uint32_t>(this_._internal_grid_resolution()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_grid_resolution(), target);
          }

          // int32 max_players = 5;
          if (this_._internal_max_players() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_max_players(), target);
          }

          // bool auto_shoot_allowed = 6;
          if (this_._internal_auto_shoot_allowed() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_auto_shoot_allowed(), target);
          }

          // bool radar_enabled = 7;
          if (this_._internal_radar_enabled() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                7, this_._internal_radar_enabled(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:battle_c.WorldOptions)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t WorldOptions::ByteSizeLong(const MessageLite& base) {
          const WorldOptions& this_ = static_cast<const WorldOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t WorldOptions::ByteSizeLong() const {
          const WorldOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:battle_c.WorldOptions)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int32 map_x = 1;
            if (this_._internal_map_x() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_map_x());
            }
            // int32 map_y = 2;
            if (this_._internal_map_y() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_map_y());
            }
            // float grid_resolution = 4;
            if (::absl::bit_cast<::uint32_t>(this_._internal_grid_resolution()) != 0) {
              total_size += 5;
            }
            // int32 max_players = 5;
            if (this_._internal_max_players() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_max_players());
            }
            // bool grid_based = 3;
            if (this_._internal_grid_based() != 0) {
              total_size += 2;
            }
            // bool auto_shoot_allowed = 6;
            if (this_._internal_auto_shoot_allowed() != 0) {
              total_size += 2;
            }
            // bool radar_enabled = 7;
            if (this_._internal_radar_enabled() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void WorldOptions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WorldOptions*>(&to_msg);
  auto& from = static_cast<const WorldOptions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:battle_c.WorldOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_map_x() != 0) {
    _this->_impl_.map_x_ = from._impl_.map_x_;
  }
  if (from._internal_map_y() != 0) {
    _this->_impl_.map_y_ = from._impl_.map_y_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_grid_resolution()) != 0) {
    _this->_impl_.grid_resolution_ = from._impl_.grid_resolution_;
  }
  if (from._internal_max_players() != 0) {
    _this->_impl_.max_players_ = from._impl_.max_players_;
  }
  if (from._internal_grid_based() != 0) {
    _this->_impl_.grid_based_ = from._impl_.grid_based_;
  }
  if (from._internal_auto_shoot_allowed() != 0) {
    _this->_impl_.auto_shoot_allowed_ = from._impl_.auto_shoot_allowed_;
  }
  if (from._internal_radar_enabled() != 0) {
    _this->_impl_.radar_enabled_ = from._impl_.radar_enabled_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WorldOptions::CopyFrom(const WorldOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:battle_c.WorldOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WorldOptions::InternalSwap(WorldOptions* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WorldOptions, _impl_.radar_enabled_)
      + sizeof(WorldOptions::_impl_.radar_enabled_)
      - PROTOBUF_FIELD_OFFSET(WorldOptions, _impl_.map_x_)>(
          reinterpret_cast<char*>(&_impl_.map_x_),
          reinterpret_cast<char*>(&other->_impl_.map_x_));
}

::google::protobuf::Metadata WorldOptions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RadarResult::_Internal {
 public:
};

RadarResult::RadarResult(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:battle_c.RadarResult)
}
inline PROTOBUF_NDEBUG_INLINE RadarResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::battle_c::RadarResult& from_msg)
      : radar_return_{visibility, arena, from.radar_return_},
        _cached_size_{0} {}

RadarResult::RadarResult(
    ::google::protobuf::Arena* arena,
    const RadarResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RadarResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:battle_c.RadarResult)
}
inline PROTOBUF_NDEBUG_INLINE RadarResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : radar_return_{visibility, arena},
        _cached_size_{0} {}

inline void RadarResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RadarResult::~RadarResult() {
  // @@protoc_insertion_point(destructor:battle_c.RadarResult)
  SharedDtor(*this);
}
inline void RadarResult::SharedDtor(MessageLite& self) {
  RadarResult& this_ = static_cast<RadarResult&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* RadarResult::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RadarResult(arena);
}
constexpr auto RadarResult::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RadarResult, _impl_.radar_return_) +
          decltype(RadarResult::_impl_.radar_return_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(RadarResult), alignof(RadarResult), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RadarResult::PlacementNew_,
                                 sizeof(RadarResult),
                                 alignof(RadarResult));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RadarResult::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RadarResult_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RadarResult::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RadarResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RadarResult::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RadarResult>(), &RadarResult::ByteSizeLong,
            &RadarResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RadarResult, _impl_._cached_size_),
        false,
    },
    &RadarResult::kDescriptorMethods,
    &descriptor_table_battle_5fc_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RadarResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RadarResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::battle_c::RadarResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .battle_c.RadarReturn radar_return = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RadarResult, _impl_.radar_return_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .battle_c.RadarReturn radar_return = 1;
    {PROTOBUF_FIELD_OFFSET(RadarResult, _impl_.radar_return_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::battle_c::RadarReturn>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RadarResult::Clear() {
// @@protoc_insertion_point(message_clear_start:battle_c.RadarResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.radar_return_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RadarResult::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RadarResult& this_ = static_cast<const RadarResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RadarResult::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RadarResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:battle_c.RadarResult)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .battle_c.RadarReturn radar_return = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_radar_return_size());
               i < n; i++) {
            const auto& repfield = this_._internal_radar_return().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:battle_c.RadarResult)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RadarResult::ByteSizeLong(const MessageLite& base) {
          const RadarResult& this_ = static_cast<const RadarResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RadarResult::ByteSizeLong() const {
          const RadarResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:battle_c.RadarResult)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .battle_c.RadarReturn radar_return = 1;
            {
              total_size += 1UL * this_._internal_radar_return_size();
              for (const auto& msg : this_._internal_radar_return()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RadarResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RadarResult*>(&to_msg);
  auto& from = static_cast<const RadarResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:battle_c.RadarResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_radar_return()->MergeFrom(
      from._internal_radar_return());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RadarResult::CopyFrom(const RadarResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:battle_c.RadarResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RadarResult::InternalSwap(RadarResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.radar_return_.InternalSwap(&other->_impl_.radar_return_);
}

::google::protobuf::Metadata RadarResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PlayersSighted::_Internal {
 public:
};

PlayersSighted::PlayersSighted(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:battle_c.PlayersSighted)
}
inline PROTOBUF_NDEBUG_INLINE PlayersSighted::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::battle_c::PlayersSighted& from_msg)
      : players_{visibility, arena, from.players_},
        _cached_size_{0} {}

PlayersSighted::PlayersSighted(
    ::google::protobuf::Arena* arena,
    const PlayersSighted& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PlayersSighted* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:battle_c.PlayersSighted)
}
inline PROTOBUF_NDEBUG_INLINE PlayersSighted::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : players_{visibility, arena},
        _cached_size_{0} {}

inline void PlayersSighted::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PlayersSighted::~PlayersSighted() {
  // @@protoc_insertion_point(destructor:battle_c.PlayersSighted)
  SharedDtor(*this);
}
inline void PlayersSighted::SharedDtor(MessageLite& self) {
  PlayersSighted& this_ = static_cast<PlayersSighted&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PlayersSighted::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PlayersSighted(arena);
}
constexpr auto PlayersSighted::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PlayersSighted, _impl_.players_) +
          decltype(PlayersSighted::_impl_.players_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(PlayersSighted), alignof(PlayersSighted), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PlayersSighted::PlacementNew_,
                                 sizeof(PlayersSighted),
                                 alignof(PlayersSighted));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PlayersSighted::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PlayersSighted_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PlayersSighted::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PlayersSighted>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PlayersSighted::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PlayersSighted>(), &PlayersSighted::ByteSizeLong,
            &PlayersSighted::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PlayersSighted, _impl_._cached_size_),
        false,
    },
    &PlayersSighted::kDescriptorMethods,
    &descriptor_table_battle_5fc_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PlayersSighted::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> PlayersSighted::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967293,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::battle_c::PlayersSighted>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .battle_c.PlayerData players = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PlayersSighted, _impl_.players_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .battle_c.PlayerData players = 2;
    {PROTOBUF_FIELD_OFFSET(PlayersSighted, _impl_.players_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::battle_c::PlayerData>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PlayersSighted::Clear() {
// @@protoc_insertion_point(message_clear_start:battle_c.PlayersSighted)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.players_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PlayersSighted::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PlayersSighted& this_ = static_cast<const PlayersSighted&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PlayersSighted::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PlayersSighted& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:battle_c.PlayersSighted)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .battle_c.PlayerData players = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_players_size());
               i < n; i++) {
            const auto& repfield = this_._internal_players().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:battle_c.PlayersSighted)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PlayersSighted::ByteSizeLong(const MessageLite& base) {
          const PlayersSighted& this_ = static_cast<const PlayersSighted&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PlayersSighted::ByteSizeLong() const {
          const PlayersSighted& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:battle_c.PlayersSighted)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .battle_c.PlayerData players = 2;
            {
              total_size += 1UL * this_._internal_players_size();
              for (const auto& msg : this_._internal_players()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PlayersSighted::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlayersSighted*>(&to_msg);
  auto& from = static_cast<const PlayersSighted&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:battle_c.PlayersSighted)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_players()->MergeFrom(
      from._internal_players());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayersSighted::CopyFrom(const PlayersSighted& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:battle_c.PlayersSighted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlayersSighted::InternalSwap(PlayersSighted* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.players_.InternalSwap(&other->_impl_.players_);
}

::google::protobuf::Metadata PlayersSighted::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ShootResult::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ShootResult>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ShootResult, _impl_._has_bits_);
};

ShootResult::ShootResult(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:battle_c.ShootResult)
}
ShootResult::ShootResult(
    ::google::protobuf::Arena* arena, const ShootResult& from)
    : ShootResult(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ShootResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ShootResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, target_id_),
           0,
           offsetof(Impl_, target_destroyed_) -
               offsetof(Impl_, target_id_) +
               sizeof(Impl_::target_destroyed_));
}
ShootResult::~ShootResult() {
  // @@protoc_insertion_point(destructor:battle_c.ShootResult)
  SharedDtor(*this);
}
inline void ShootResult::SharedDtor(MessageLite& self) {
  ShootResult& this_ = static_cast<ShootResult&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ShootResult::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ShootResult(arena);
}
constexpr auto ShootResult::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ShootResult),
                                            alignof(ShootResult));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ShootResult::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ShootResult_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ShootResult::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ShootResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ShootResult::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ShootResult>(), &ShootResult::ByteSizeLong,
            &ShootResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ShootResult, _impl_._cached_size_),
        false,
    },
    &ShootResult::kDescriptorMethods,
    &descriptor_table_battle_5fc_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ShootResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> ShootResult::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ShootResult, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::battle_c::ShootResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional bool target_destroyed = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ShootResult, _impl_.target_destroyed_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(ShootResult, _impl_.target_destroyed_)}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ShootResult, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ShootResult, _impl_.success_)}},
    // optional uint64 target_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ShootResult, _impl_.target_id_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(ShootResult, _impl_.target_id_)}},
    // optional uint64 damage_points = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ShootResult, _impl_.damage_points_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(ShootResult, _impl_.damage_points_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(ShootResult, _impl_.success_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // optional uint64 target_id = 2;
    {PROTOBUF_FIELD_OFFSET(ShootResult, _impl_.target_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 damage_points = 3;
    {PROTOBUF_FIELD_OFFSET(ShootResult, _impl_.damage_points_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional bool target_destroyed = 4;
    {PROTOBUF_FIELD_OFFSET(ShootResult, _impl_.target_destroyed_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ShootResult::Clear() {
// @@protoc_insertion_point(message_clear_start:battle_c.ShootResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.target_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.damage_points_) -
        reinterpret_cast<char*>(&_impl_.target_id_)) + sizeof(_impl_.damage_points_));
  }
  _impl_.success_ = false;
  _impl_.target_destroyed_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ShootResult::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ShootResult& this_ = static_cast<const ShootResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ShootResult::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ShootResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:battle_c.ShootResult)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional uint64 target_id = 2;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_target_id(), target);
          }

          // optional uint64 damage_points = 3;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_damage_points(), target);
          }

          // optional bool target_destroyed = 4;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_target_destroyed(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:battle_c.ShootResult)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ShootResult::ByteSizeLong(const MessageLite& base) {
          const ShootResult& this_ = static_cast<const ShootResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ShootResult::ByteSizeLong() const {
          const ShootResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:battle_c.ShootResult)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // optional uint64 target_id = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_target_id());
            }
            // optional uint64 damage_points = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_damage_points());
            }
          }
           {
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
           {
            // optional bool target_destroyed = 4;
            if (cached_has_bits & 0x00000004u) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ShootResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ShootResult*>(&to_msg);
  auto& from = static_cast<const ShootResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:battle_c.ShootResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.target_id_ = from._impl_.target_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.damage_points_ = from._impl_.damage_points_;
    }
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  if (cached_has_bits & 0x00000004u) {
    _this->_impl_.target_destroyed_ = from._impl_.target_destroyed_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ShootResult::CopyFrom(const ShootResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:battle_c.ShootResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ShootResult::InternalSwap(ShootResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ShootResult, _impl_.target_destroyed_)
      + sizeof(ShootResult::_impl_.target_destroyed_)
      - PROTOBUF_FIELD_OFFSET(ShootResult, _impl_.target_id_)>(
          reinterpret_cast<char*>(&_impl_.target_id_),
          reinterpret_cast<char*>(&other->_impl_.target_id_));
}

::google::protobuf::Metadata ShootResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ServerClientMessage::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ServerClientMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ServerClientMessage, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::battle_c::ServerClientMessage, _impl_._oneof_case_);
};

void ServerClientMessage::set_allocated_world_options(::battle_c::WorldOptions* world_options) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_body();
  if (world_options) {
    ::google::protobuf::Arena* submessage_arena = world_options->GetArena();
    if (message_arena != submessage_arena) {
      world_options = ::google::protobuf::internal::GetOwnedMessage(message_arena, world_options, submessage_arena);
    }
    set_has_world_options();
    _impl_.body_.world_options_ = world_options;
  }
  // @@protoc_insertion_point(field_set_allocated:battle_c.ServerClientMessage.world_options)
}
void ServerClientMessage::set_allocated_player_data(::battle_c::PlayerData* player_data) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_body();
  if (player_data) {
    ::google::protobuf::Arena* submessage_arena = player_data->GetArena();
    if (message_arena != submessage_arena) {
      player_data = ::google::protobuf::internal::GetOwnedMessage(message_arena, player_data, submessage_arena);
    }
    set_has_player_data();
    _impl_.body_.player_data_ = player_data;
  }
  // @@protoc_insertion_point(field_set_allocated:battle_c.ServerClientMessage.player_data)
}
void ServerClientMessage::set_allocated_players_sighted(::battle_c::PlayersSighted* players_sighted) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_body();
  if (players_sighted) {
    ::google::protobuf::Arena* submessage_arena = players_sighted->GetArena();
    if (message_arena != submessage_arena) {
      players_sighted = ::google::protobuf::internal::GetOwnedMessage(message_arena, players_sighted, submessage_arena);
    }
    set_has_players_sighted();
    _impl_.body_.players_sighted_ = players_sighted;
  }
  // @@protoc_insertion_point(field_set_allocated:battle_c.ServerClientMessage.players_sighted)
}
void ServerClientMessage::set_allocated_radar_result(::battle_c::RadarResult* radar_result) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_body();
  if (radar_result) {
    ::google::protobuf::Arena* submessage_arena = radar_result->GetArena();
    if (message_arena != submessage_arena) {
      radar_result = ::google::protobuf::internal::GetOwnedMessage(message_arena, radar_result, submessage_arena);
    }
    set_has_radar_result();
    _impl_.body_.radar_result_ = radar_result;
  }
  // @@protoc_insertion_point(field_set_allocated:battle_c.ServerClientMessage.radar_result)
}
void ServerClientMessage::set_allocated_shoot_result(::battle_c::ShootResult* shoot_result) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_body();
  if (shoot_result) {
    ::google::protobuf::Arena* submessage_arena = shoot_result->GetArena();
    if (message_arena != submessage_arena) {
      shoot_result = ::google::protobuf::internal::GetOwnedMessage(message_arena, shoot_result, submessage_arena);
    }
    set_has_shoot_result();
    _impl_.body_.shoot_result_ = shoot_result;
  }
  // @@protoc_insertion_point(field_set_allocated:battle_c.ServerClientMessage.shoot_result)
}
ServerClientMessage::ServerClientMessage(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:battle_c.ServerClientMessage)
}
inline PROTOBUF_NDEBUG_INLINE ServerClientMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::battle_c::ServerClientMessage& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        body_{},
        _oneof_case_{from._oneof_case_[0]} {}

ServerClientMessage::ServerClientMessage(
    ::google::protobuf::Arena* arena,
    const ServerClientMessage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ServerClientMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.message_id_ = from._impl_.message_id_;
  switch (body_case()) {
    case BODY_NOT_SET:
      break;
      case kError:
        new (&_impl_.body_.error_) decltype(_impl_.body_.error_){arena, from._impl_.body_.error_};
        break;
      case kWorldOptions:
        _impl_.body_.world_options_ = ::google::protobuf::Message::CopyConstruct<::battle_c::WorldOptions>(arena, *from._impl_.body_.world_options_);
        break;
      case kPlayerData:
        _impl_.body_.player_data_ = ::google::protobuf::Message::CopyConstruct<::battle_c::PlayerData>(arena, *from._impl_.body_.player_data_);
        break;
      case kPlayersSighted:
        _impl_.body_.players_sighted_ = ::google::protobuf::Message::CopyConstruct<::battle_c::PlayersSighted>(arena, *from._impl_.body_.players_sighted_);
        break;
      case kRadarResult:
        _impl_.body_.radar_result_ = ::google::protobuf::Message::CopyConstruct<::battle_c::RadarResult>(arena, *from._impl_.body_.radar_result_);
        break;
      case kShootResult:
        _impl_.body_.shoot_result_ = ::google::protobuf::Message::CopyConstruct<::battle_c::ShootResult>(arena, *from._impl_.body_.shoot_result_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:battle_c.ServerClientMessage)
}
inline PROTOBUF_NDEBUG_INLINE ServerClientMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        body_{},
        _oneof_case_{} {}

inline void ServerClientMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.message_id_ = {};
}
ServerClientMessage::~ServerClientMessage() {
  // @@protoc_insertion_point(destructor:battle_c.ServerClientMessage)
  SharedDtor(*this);
}
inline void ServerClientMessage::SharedDtor(MessageLite& self) {
  ServerClientMessage& this_ = static_cast<ServerClientMessage&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_body()) {
    this_.clear_body();
  }
  this_._impl_.~Impl_();
}

void ServerClientMessage::clear_body() {
// @@protoc_insertion_point(one_of_clear_start:battle_c.ServerClientMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (body_case()) {
    case kError: {
      _impl_.body_.error_.Destroy();
      break;
    }
    case kWorldOptions: {
      if (GetArena() == nullptr) {
        delete _impl_.body_.world_options_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.body_.world_options_);
      }
      break;
    }
    case kPlayerData: {
      if (GetArena() == nullptr) {
        delete _impl_.body_.player_data_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.body_.player_data_);
      }
      break;
    }
    case kPlayersSighted: {
      if (GetArena() == nullptr) {
        delete _impl_.body_.players_sighted_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.body_.players_sighted_);
      }
      break;
    }
    case kRadarResult: {
      if (GetArena() == nullptr) {
        delete _impl_.body_.radar_result_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.body_.radar_result_);
      }
      break;
    }
    case kShootResult: {
      if (GetArena() == nullptr) {
        delete _impl_.body_.shoot_result_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.body_.shoot_result_);
      }
      break;
    }
    case BODY_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = BODY_NOT_SET;
}


inline void* ServerClientMessage::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ServerClientMessage(arena);
}
constexpr auto ServerClientMessage::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ServerClientMessage),
                                            alignof(ServerClientMessage));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ServerClientMessage::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ServerClientMessage_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ServerClientMessage::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ServerClientMessage>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ServerClientMessage::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ServerClientMessage>(), &ServerClientMessage::ByteSizeLong,
            &ServerClientMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ServerClientMessage, _impl_._cached_size_),
        false,
    },
    &ServerClientMessage::kDescriptorMethods,
    &descriptor_table_battle_5fc_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ServerClientMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 7, 5, 42, 2> ServerClientMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ServerClientMessage, _impl_._has_bits_),
    0, // no _extensions_
    7, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::battle_c::ServerClientMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 message_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ServerClientMessage, _impl_.message_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ServerClientMessage, _impl_.message_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 message_id = 1;
    {PROTOBUF_FIELD_OFFSET(ServerClientMessage, _impl_.message_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string error = 2;
    {PROTOBUF_FIELD_OFFSET(ServerClientMessage, _impl_.body_.error_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .battle_c.WorldOptions world_options = 3;
    {PROTOBUF_FIELD_OFFSET(ServerClientMessage, _impl_.body_.world_options_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .battle_c.PlayerData player_data = 4;
    {PROTOBUF_FIELD_OFFSET(ServerClientMessage, _impl_.body_.player_data_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .battle_c.PlayersSighted players_sighted = 5;
    {PROTOBUF_FIELD_OFFSET(ServerClientMessage, _impl_.body_.players_sighted_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .battle_c.RadarResult radar_result = 6;
    {PROTOBUF_FIELD_OFFSET(ServerClientMessage, _impl_.body_.radar_result_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .battle_c.ShootResult shoot_result = 7;
    {PROTOBUF_FIELD_OFFSET(ServerClientMessage, _impl_.body_.shoot_result_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::battle_c::WorldOptions>()},
    {::_pbi::TcParser::GetTable<::battle_c::PlayerData>()},
    {::_pbi::TcParser::GetTable<::battle_c::PlayersSighted>()},
    {::_pbi::TcParser::GetTable<::battle_c::RadarResult>()},
    {::_pbi::TcParser::GetTable<::battle_c::ShootResult>()},
  }}, {{
    "\34\0\5\0\0\0\0\0"
    "battle_c.ServerClientMessage"
    "error"
  }},
};

PROTOBUF_NOINLINE void ServerClientMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:battle_c.ServerClientMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_id_ = 0;
  clear_body();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ServerClientMessage::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ServerClientMessage& this_ = static_cast<const ServerClientMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ServerClientMessage::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ServerClientMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:battle_c.ServerClientMessage)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional int32 message_id = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_message_id(), target);
          }

          switch (this_.body_case()) {
            case kError: {
              const std::string& _s = this_._internal_error();
              ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                  _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "battle_c.ServerClientMessage.error");
              target = stream->WriteStringMaybeAliased(2, _s, target);
              break;
            }
            case kWorldOptions: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  3, *this_._impl_.body_.world_options_, this_._impl_.body_.world_options_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kPlayerData: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  4, *this_._impl_.body_.player_data_, this_._impl_.body_.player_data_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kPlayersSighted: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  5, *this_._impl_.body_.players_sighted_, this_._impl_.body_.players_sighted_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kRadarResult: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  6, *this_._impl_.body_.radar_result_, this_._impl_.body_.radar_result_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kShootResult: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  7, *this_._impl_.body_.shoot_result_, this_._impl_.body_.shoot_result_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:battle_c.ServerClientMessage)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ServerClientMessage::ByteSizeLong(const MessageLite& base) {
          const ServerClientMessage& this_ = static_cast<const ServerClientMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ServerClientMessage::ByteSizeLong() const {
          const ServerClientMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:battle_c.ServerClientMessage)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // optional int32 message_id = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_message_id());
            }
          }
          switch (this_.body_case()) {
            // string error = 2;
            case kError: {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error());
              break;
            }
            // .battle_c.WorldOptions world_options = 3;
            case kWorldOptions: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.body_.world_options_);
              break;
            }
            // .battle_c.PlayerData player_data = 4;
            case kPlayerData: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.body_.player_data_);
              break;
            }
            // .battle_c.PlayersSighted players_sighted = 5;
            case kPlayersSighted: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.body_.players_sighted_);
              break;
            }
            // .battle_c.RadarResult radar_result = 6;
            case kRadarResult: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.body_.radar_result_);
              break;
            }
            // .battle_c.ShootResult shoot_result = 7;
            case kShootResult: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.body_.shoot_result_);
              break;
            }
            case BODY_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ServerClientMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ServerClientMessage*>(&to_msg);
  auto& from = static_cast<const ServerClientMessage&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:battle_c.ServerClientMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.message_id_ = from._impl_.message_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_body();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kError: {
        if (oneof_needs_init) {
          _this->_impl_.body_.error_.InitDefault();
        }
        _this->_impl_.body_.error_.Set(from._internal_error(), arena);
        break;
      }
      case kWorldOptions: {
        if (oneof_needs_init) {
          _this->_impl_.body_.world_options_ =
              ::google::protobuf::Message::CopyConstruct<::battle_c::WorldOptions>(arena, *from._impl_.body_.world_options_);
        } else {
          _this->_impl_.body_.world_options_->MergeFrom(from._internal_world_options());
        }
        break;
      }
      case kPlayerData: {
        if (oneof_needs_init) {
          _this->_impl_.body_.player_data_ =
              ::google::protobuf::Message::CopyConstruct<::battle_c::PlayerData>(arena, *from._impl_.body_.player_data_);
        } else {
          _this->_impl_.body_.player_data_->MergeFrom(from._internal_player_data());
        }
        break;
      }
      case kPlayersSighted: {
        if (oneof_needs_init) {
          _this->_impl_.body_.players_sighted_ =
              ::google::protobuf::Message::CopyConstruct<::battle_c::PlayersSighted>(arena, *from._impl_.body_.players_sighted_);
        } else {
          _this->_impl_.body_.players_sighted_->MergeFrom(from._internal_players_sighted());
        }
        break;
      }
      case kRadarResult: {
        if (oneof_needs_init) {
          _this->_impl_.body_.radar_result_ =
              ::google::protobuf::Message::CopyConstruct<::battle_c::RadarResult>(arena, *from._impl_.body_.radar_result_);
        } else {
          _this->_impl_.body_.radar_result_->MergeFrom(from._internal_radar_result());
        }
        break;
      }
      case kShootResult: {
        if (oneof_needs_init) {
          _this->_impl_.body_.shoot_result_ =
              ::google::protobuf::Message::CopyConstruct<::battle_c::ShootResult>(arena, *from._impl_.body_.shoot_result_);
        } else {
          _this->_impl_.body_.shoot_result_->MergeFrom(from._internal_shoot_result());
        }
        break;
      }
      case BODY_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ServerClientMessage::CopyFrom(const ServerClientMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:battle_c.ServerClientMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ServerClientMessage::InternalSwap(ServerClientMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.message_id_, other->_impl_.message_id_);
  swap(_impl_.body_, other->_impl_.body_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ServerClientMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace battle_c
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_battle_5fc_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
